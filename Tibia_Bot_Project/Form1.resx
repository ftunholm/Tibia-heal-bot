<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>